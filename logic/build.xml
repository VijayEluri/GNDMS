<project name="logic compilation file" default="jar" basedir=".">
	
	<!-- Define the environment variable -->
	<property environment="env"/>
	
	<!--Define location of c3grid basedir relative to this service-->
	<property name="c3grid.basedir"  value=".."/>
	<property file="${c3grid.basedir}/c3grid.properties"/>
	<property file="${c3grid.basedir}/c3grid.deps"/>
	<property file="logic.properties"/>
	
	
	<path id="logic.path">
		
		<pathelement path="${GROOVY}"/> 

		<pathelement path="${annotations}"/>
		<dirset dir="${logic.classes.dest}"/>
       		<pathelement path="${stuff}"/>                
		<pathelement path="${gndms-shared-model}"/>
		<pathelement path="${testng}"/> 
		<pathelement path="${apache-commons}"/>
		<pathelement path="${db-derby}"/>
		<pathelement path="${joda-time}"/> 
		<pathelement path="${gndms-kit}"/>
		<pathelement path="${collections}"/>
		<pathelement path="${gt4}"/>
		<pathelement path="${openjpa}"/>
        	<pathelement path="${guice}"/>
	</path>
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.contrib}" />
		</classpath>
	</taskdef>
	
	
	<!-- Compile logic, but not its test-files -->	
	<target name="compile" description="Compiles logic">
		<if>
			<and>
				<available file="${stuff}"/>
				<available file="${gndms-shared-model}"/>
				<available file="${gndms-kit}"/>
			</and>
			<then>
				<mkdir dir="${logic.classes.dest}"/>
				<!-- Copy Meta files to build dir-->
				<copy todir="${logic.classes.dest}">
					<fileset dir='src'>
						<exclude name="de/**"/>
					</fileset>
				</copy>
				
				<javac srcdir='src' destdir='${logic.classes.dest}' classpathref="logic.path" debug="${javac.debug}"/>
			</then>
			
			<else>
		<fail message="Not able to compile as '${gndms-shared-model}', ''${gndms-kit}' or '${stuff}' was not found."/>
	</else>
	
		</if>
		
	</target>
	
	
	<!-- Creates jar containing logic's test-classfiles-->	
	<target name="jar.test"  depends="compile.test" description="Creates jar file gndms-logic-test.jar in 'extra/lib'">	
		
		<jar destfile="${gndms-logic-test}"
		     basedir="${logic.test.classes.dest}">
		</jar>
	</target>
	
	<!-- Creates jar containing logic's classfiles-->	
	<target name="jar" depends="compile" description="Creates jar file gndms-logic.jar in 'extra/lib'">	
		
		<jar destfile="${gndms-logic}"
		     basedir="${logic.classes.dest}">
		</jar>
	</target>
	
	<path id="logic.test.path">
		<pathelement path="${gndms-shared-model-test}"/>
		<pathelement path="${gndms-kit-test}"/>
		<pathelement path="${gndms-logic}"/>
		<path refid="logic.path"/>
		<!-- Dirset nötig ?-->
		<dirset dir="${logic.test.classes.dest}"/>
	</path>
	
	<!-- Compile logic's test-classes-->	
	<target name="compile.test" description="Compiles logic's test-files">

			
		<mkdir dir="${logic.test.classes.dest}"/>
		<!-- Split nötig ?-->
		<javac srcdir='test-src' destdir='${logic.test.classes.dest}' classpathref="logic.test.path" includes="**/action/*" debug="${javac.debug}">	
		</javac>
		
		<javac srcdir='test-src' destdir='${logic.test.classes.dest}' classpathref="logic.test.path" includes="**/model/*" debug="${javac.debug}">	
		</javac>
		<!-- Copy Meta files to build dir-->
		<copy todir="${logic.test.classes.dest}">
			<fileset dir='test-src'>
				<exclude name="de/**"/>
			</fileset>
		</copy>
	</target>
	
	<!-- Deletes binaries and jar-files -->
	<target name="clean" description="Deletes logic's binaries">
		<delete includeemptydirs="true" >
			<fileset dir='${logic.classes.dest}' includes="**/*.class"/>
			<fileset dir='${logic.test.classes.dest}' includes="**/*.class"/>
			
		</delete>
	</target>
	
	<!-- Deletes jar-files -->
	<target name="clean.jar" description="Deletes logic's jar-file">
		<delete file='${gndms-logic}'/>
		<delete file='${gndms-logic-test}'/>
	</target>
</project>
	
