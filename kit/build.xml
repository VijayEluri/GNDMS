<project name="kit compilation file" default="compile" basedir=".">

	<property name="c3grid.basedir"  value=".."/>
	<property file="${c3grid.basedir}/c3grid.properties"/>
	<property file="${c3grid.basedir}/c3grid.deps"/>
	<property file="kit.properties"/>
	
	<path id="kit.path">
		<pathelement path="${GROOVY}"/> 
		<pathelement path="${openjpa}"/>
		<dirset dir="${kit.classes.dest}"/>
		<fileset refid="globus.lib"/>
		<pathelement path="${gndms-shared-model}"/>
		<pathelement path="${annotations}"/>
		<pathelement path="${jetty}"/>
		<pathelement path="${servlet-api}"/>
		<pathelement path="${cos}"/>
		<pathelement path="${testng}"/> 
		<pathelement path="${joda-time}"/> 
		<pathelement path="${args4j}"/>
		<pathelement path="${collections}"/> 
                <pathelement path="${guice}"/>
	</path>
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${build-lib.dir}/ant-contrib-0.6.jar" />
		</classpath>
	</taskdef>
	
	<path id="groovy.path">
		<pathelement location="${gndms-groovy}"/>
	</path>
	
	<!-- using groovc as groovy compiler in ant-->
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path" />
	
	
	<!-- Compile model, but not its test-files -->
	<target name="compile" description="Compiles kit">
		
		<if>
			<available file="${gndms-shared-model}"/>
			<then>
				<mkdir dir="${kit.classes.dest}"/>
				<!-- Copy meta-stuff -->
				<copy todir="${kit.classes.dest}">
					<fileset dir='src'>
						<exclude name="de/**"/>
					</fileset>
				</copy>
				<groovyc srcdir='src' destdir='${kit.classes.dest}' classpathref="kit.path">
					<javac debug="${javac.debug}"/>
				</groovyc>
			</then>
			<else>
				<fail message="Not able to compile as '${lib.dir}/gndms-shared-model.jar' was not found."/>
			</else>
		</if>
		
		
	</target>
	
	<path id="test.path">
		<pathelement location="${gndms-shared-model}"/>
		<pathelement location="${gndms-kit}"/>
		<path refid="kit.path"/>
		<!--dirset dir="${model.dest}/test"/-->
	</path>

	<!-- Compile kit's test-classes-->
	<target name="compile.test" description="Compiles kit and its test-files">
		<mkdir dir="${kit.test.classes.dest}"/>
		<!-- Copy meta-stuff -->
		<copy todir="${kit.test.classes.dest}">
			<fileset dir='test-src'>
				<exclude name="de/**"/>
			</fileset>
		</copy>
		<javac srcdir='test-src' destdir='${kit.test.classes.dest}' classpathref="kit.test.path" debug="${javac.debug}"/>
	</target>
	
	
	<!-- Creates jar-file containing kit's test-classfiles-->
	<target name="jar.test" depends="compile.test" description="Creates jar file gndms-kit-test.jar in 'extra/lib'">
		<jar destfile="${gndms-kit-test}" basedir="${kit.test.classes.dest}"/>
	</target>
	
	<!-- Creates jar-file containing kit's classfiles-->
	<target name="jar" depends="compile" description="Creates jar file gndms-kit.jar in 'extra/lib'">
		<jar destfile="${gndms-kit}" basedir="${kit.classes.dest}"/>
	</target>


	<!-- Deletes kits' classfiles -->
	<target name="clean" description="Deletes kit's classfiles ">
		<delete includeemptydirs="true" >
			<fileset dir='${kit.classes.dest}' includes="**/*.class"/>
			<fileset dir='${kit.test.classes.dest}' includes="**/*.class"/>
		</delete>
	</target>


	<!-- Deletes jar-files-->
	<target name="clean.jar" description="Deletes kit's jar-file">
		<delete file='${gndms-kit}'/>
		<delete file='${gndms-kit-test}'/>
	</target>

</project>
