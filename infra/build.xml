<project name="infra compilation file" default="jar" basedir=".">
	
	<!-- Define the environment variable -->
	<property environment="env"/>
	
	<!--Define location of c3grid basedir relative to this service-->
	<property name="c3grid.basedir"  value=".."/>
	<property file="${c3grid.basedir}/c3grid.properties"/>
	<property file="${c3grid.basedir}/c3grid.deps"/>
	<property file="infra.properties"/>
	
	
	<path id="infra.path">
		<pathelement path="${GROOVY}"/>
		<pathelement path="${annotations}"/>
		<pathelement path="${gndms-logic}"/>
		<pathelement path="${stuff}"/>
		<pathelement path="${gndms-shared-model}"/>
		<pathelement path="${apache-commons}"/>
		<pathelement path="${db-derby}"/>
		<pathelement path="${cos}"/>
		<pathelement path="${servlet-api}"/>
		<pathelement path="${jetty}"/>
		<pathelement path="${gt4}"/>
		<pathelement path="${testng}"/>
		<pathelement path="${joda-time}"/>
		<pathelement path="${gndms-kit}"/>
		<pathelement path="${jaxb}"/>
		<pathelement path="${openjpa}"/>
		<pathelement path="${guice}"/>
		<pathelement path="${collections}"/>
	</path>
	
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.contrib}" />
		</classpath>
	</taskdef>
	
	<path id="groovy.path">
		<pathelement location="${gndms-groovy}"/>
	</path>
	
	<!-- using groovc as groovy compiler in ant-->
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path" />
	
	

	
	<!-- Compile infra, but not its test-files -->	
	<target name="compile">
		<mkdir dir="${infra.classes.dest}"/>
		<for param="jars">
			<path refid="infra.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		
		
		<javac srcdir='src' destdir='${infra.classes.dest}' classpathref="infra.path" debug="${javac.debug}"/>
		<groovyc srcdir='src' destdir='${infra.classes.dest}' classpathref="infra.path">
			<javac debug="${javac.debug}" />
	        </groovyc>
		
		<!-- Copy meta-stuff -->
		<copy todir="${infra.classes.dest}">
			<fileset dir='src'>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	
	<path id="infra.test.path">
		<path refid="infra.path"/>
		<pathelement path="${gndms-shared-model-test}"/>
		<pathelement path="${gndms-kit-test}"/>
		<pathelement path="${gndms-logic-test}"/>
		<pathelement path="${gndms-infra}"/>
	</path>
	
	<!-- Compile infra and its test-files -->
	<target name="compile.test"  description="Compiles infra's test-files">
		<mkdir dir="${infra.test.classes.dest}"/>
		<for param="jars">
			<path refid="infra.test.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		
		<javac srcdir='test-src' destdir='${infra.test.classes.dest}' classpathref="infra.test.path" debug="${javac.debug}"/>
		
		<!-- Copy meta-stuff -->
		<copy todir="${infra.test.classes.dest}">
			<fileset dir='test-src'>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<!-- Creates jar-file containing infra's test-classes -->	
	<target name="jar.test" depends="compile.test">
		<jar destfile="${gndms-infra-test}" basedir="test-src"/>		
	</target>
		
	
	<!-- Creates jar-file containing infra's classes -->	
	<target name="jar" depends="compile">
		<jar destfile="${gndms-infra}" basedir="${infra.classes.dest}"/>		
	</target>
	
	<!-- Deletes binaries-->
	<target name="clean" description="Deletes infra's binaries">
		<echo> deleting </echo>
		<delete dir='${infra.classes}'/>
	</target>
	
	<!-- Deletes jar-file-->
	<target name="clean.jar" description="Deletes infra's jar-file">
		<delete file='${gndms-infra}'/>	
		<delete file='${gndms-infra-test}'/>
	</target>
</project>
