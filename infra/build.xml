<project name="infra compilation file" default="help" basedir=".">
	
	<!-- Define the environment variable -->
	<property environment="env"/>
	
	<!-- Do always load properties in the following order: ${c3grid.basedir},${c3grid.properties},${c3grid.deps},${others.properties} -->
	
        <!--Define location of c3grid basedir relative to this service-->
        <property name="c3grid.basedir"  value=".."/>

        <!-- Loading global project-settings.-->
        <property file="${c3grid.basedir}/c3grid.properties"/>

        <!-- Loading global project-dependencies -->
        <property file="${c3grid.basedir}/c3grid.deps"/>

	<!-- Loading local project-properties-->
	<property file="infra.properties"/>
	
	<!-- path needed to compile infra-->
	<path id="infra.path">
		<pathelement path="${GROOVY}"/>
		<pathelement path="${annotations}"/>
		<pathelement path="${gndms-logic}"/>
		<pathelement path="${stuff}"/>
		<pathelement path="${gndms-shared-model}"/>
		<pathelement path="${apache-commons}"/>
		<pathelement path="${db-derby}"/>
		<pathelement path="${cos}"/>
		<pathelement path="${servlet-api}"/>
		<pathelement path="${jetty}"/>
		<pathelement path="${gt4}"/>
		<pathelement path="${httpcore}"/>
		<pathelement path="${testng}"/>
		<pathelement path="${joda-time}"/>
		<pathelement path="${gndms-kit}"/>
		<pathelement path="${jaxb}"/>
		<pathelement path="${openjpa}"/>
		<pathelement path="${guice}"/>
		<pathelement path="${collections}"/>
	</path>
	
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.contrib}" />
		</classpath>
	</taskdef>
	
	<path id="groovy.path">
		<pathelement location="${GROOVY}"/>
	</path>
	
	<!-- using groovc as groovy compiler in ant-->
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path" />
	
	

	
	<!-- Compile infra, but not its test-files -->	
	<target name="compile" description="Compiles infra">
		<echo>Compiling infra's classes</echo>
		<mkdir dir="${infra.classes.dest}"/>
		<for param="jars">
			<path refid="infra.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		
		
		<javac srcdir='src' destdir='${infra.classes.dest}' classpathref="infra.path" debug="${javac.debug}"/>
		<groovyc srcdir='src' destdir='${infra.classes.dest}' classpathref="infra.path">
			<javac debug="${javac.debug}" />
	        </groovyc>
		
		<!-- Copy meta-stuff -->
		<copy todir="${infra.classes.dest}">
			<fileset dir='src'>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<!-- path needed to compile infra's testfiles-->
	<path id="infra.test.path">
		<path refid="infra.path"/>
		<pathelement path="${gndms-shared-model-test}"/>
		<pathelement path="${gndms-kit-test}"/>
		<pathelement path="${gndms-logic-test}"/>
		<pathelement path="${gndms-infra}"/>
	</path>
	
	<!-- Compile infra and its test-files -->
	<target name="compile.test"  description="Compiles infra's test-files">
		<echo>Compiling infra's test-classes</echo>
		<mkdir dir="${infra.test.classes.dest}"/>
		<for param="jars">
			<path refid="infra.test.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		
		<javac srcdir='test-src' destdir='${infra.test.classes.dest}' classpathref="infra.test.path" debug="${javac.debug}"/>
		
		<!-- Copy meta-stuff -->
		<copy todir="${infra.test.classes.dest}">
			<fileset dir='test-src'>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<!-- Creates jar-file containing infra's test-classes -->	
	<target name="jar.test" depends="compile.test" description="Creates jar file gndms-infra-test.jar in 'extra/lib'">
		<echo>Generating gndms-infra-test.jar</echo>
		<jar destfile="${gndms-infra-test}" basedir="test-src"/>		
	</target>
		
	
	<!-- Creates jar-file containing infra's classes -->	
	<target name="jar" depends="compile" description="Creates jar file gndms-infra.jar in 'extra/lib'">
		<echo>Generating gndms-infra.jar</echo>
		<jar destfile="${gndms-infra}" basedir="${infra.classes.dest}"/>		
	</target>
	
	<!-- Deletes binaries-->
	<target name="clean" description="Deletes infra's binaries">
		<echo> Deleting infra's class-files</echo>
		<delete dir='${infra.classes}'/>
	</target>
	
	<!-- Deletes jar-file-->
	<target name="clean.jar" description="Deletes infra's jar-file">
		<echo>Deleting all generated jar's belonging to infra</echo>
		<delete file='${gndms-infra}'/>	
		<delete file='${gndms-infra-test}'/>
	</target>
	
	<target name="help" description="Prints usage information.">
		<echo message=" =================================================================================" />
		<echo message="|                      INFRA Compilation                                          |" />
		<echo message="|                                                                                 |" />
		<echo message=" ---------------------------------------------------------------------------------" />
		<echo message="|  USAGE:                                                                         |" />
		<echo message="|    Type 'ant -h' for general help with Ant	                                     |" />
		<echo message="|    Type 'ant -p' for a description of available build targets.                  |" />
		<echo message="|    Type 'ant clean' for deleting all generated class-files.                     |" />
		<echo message="|    Type 'ant clean.all' for deleting all generated class-files and jars         |" />
		<echo message="|    Type 'ant compile' to compile all class-files of infra                       |" />
		<echo message="|    Type 'ant jar' to  create the jars	                                         |" />
		<echo message="|    Type 'ant compile.test' to compile all test-class-files and create the jars	 |" />
		<echo message=" =================================================================================" />
	</target>
</project>
