<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- this is the marshaller -->
    <!--bean id="marshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="autodetectAnnotations" value="true"/>
    </bean-->

    <!-- this is the converter for POST -->
    <!--bean id="converter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<constructor-arg ref="marshaller" />
	</bean-->

    <!-- Setup Property config -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:/META-INF/grid.properties</value>
                <value>classpath:grid.properties</value>
            </list>
        </property>
    </bean>

    <!-- #################################################################################################### -->
    <!-- Start of the bean definition -->

    <bean id="gridConfig" class="de.zib.gndms.infra.SettableGridConfig">
        <property name="gridName" value="${gridName}"/>
        <property name="gridPath" value="${gridPath}"/>
    </bean>

    <!-- most import the system class, which glue all components together -->
    <bean id="systemFactory" class="de.zib.gndms.infra.system.GNDMSystem$SysFactory">
        <constructor-arg name="anySharedConfig" ref="gridConfig"/>
        <constructor-arg name="debugModeParam" value="${debugMode}"/>
    </bean>

    <bean id="configActionCaller" class="de.zib.gndms.infra.system.ConfigActionCaller">
        <!-- possible enhancement configure actions here, like:
        property name="configActions">
            <set>
                <value>de.zib.gndms.logic.model.dspace.SetupSliceKindAction</value>
            </set>
        </property-->
    </bean>

    <bean id="system" class="de.zib.gndms.infra.system.GNDMSystem"
          factory-bean="systemFactory"
          factory-method="getInstance" />

    <bean id="taskExecutionService" class="de.zib.gndms.infra.system.SysTaskExecutionService"/>
    <bean id="taskDao" class="de.zib.gndms.neomodel.common.Dao">
        <constructor-arg name="gridName" value="${gridName}" />
        <constructor-arg name="gdb" ref="dataBase" />
    </bean>

    <bean id="taskFlowProvider" class="de.zib.gndms.infra.system.PlugableTaskFlowProvider"/>



    <!-- #################################################################################################### -->
    <!-- create some auxiliary classes -->
    <bean id="directoryAux" class="de.zib.gndms.infra.grams.LinuxDirectoryAux"/>
    <bean id="gndmsVersionInfo" class="de.zib.gndms.GNDMSVerInfo"/>
    <bean id="batchUpdateAction" class="de.zib.gndms.logic.model.DefaultBatchUpdateAction" scope="prototype"/>

    <!-- #################################################################################################### -->
    <!-- setup ORM and DBs -->
    <!-- the graph database -->
    <bean id="dataBase" class="org.neo4j.kernel.EmbeddedGraphDatabase" destroy-method="shutdown" >
        <constructor-arg value="${dataBaseDir}"/>
    </bean>

    <!-- orm -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="derby"/>
        <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
        <property name="jpaPropertyMap">
            <map>
                <entry key="openjpa.Id" value="${gridName}"/>
                <entry key="openjpa.ConnectionURL" value="jdbc:derby:${gridName};create=true"/>
                <entry key="openjpa.Logger" value="File=${jpaLoggerFile}, DefaultLevel=INFO, Runtime=TRACE, Tool=INFO"/>
            </map>
        </property>
        <!--property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property-->
    </bean>

    <jdbc:embedded-database id="derby"  type="DERBY" >
        <!--jdbc:script location="classpath:schema.sql"/-->
    </jdbc:embedded-database>
</beans>
