<project name="model compilation file" default="help" basedir=".">
	
	<!-- Define the environment variable -->
	<property environment="env"/>
	
	<!-- Do always load properties in the following order: ${c3grid.basedir},${c3grid.properties},${c3grid.deps},${others.properties} -->
	
	<!--Define location of c3grid basedir relative to this service-->
	<property name="c3grid.basedir"  value=".."/>
	
	<!-- Loading global project-settings.-->
	<property file="${c3grid.basedir}/c3grid.properties"/>
	
	<!-- Loading global project-dependencies -->
	<property file="${c3grid.basedir}/c3grid.deps"/>
		
	<!-- Loading local project-properties-->
	<property file="model.properties"/>
	
	<!-- path needed to compile model -->
	<path id="model.path">
		<pathelement path="${GROOVY}"/> 
		<pathelement path="${annotations}"/> 
		<dirset dir="${model.classes.dest}" />
		<pathelement path="${stuff}"/>
		<pathelement path="${openjpa}"/>
		<pathelement path="${collections}"/> 
		<pathelement path="${joda-time}"/> 
		<pathelement path="${testng}"/> 
		<pathelement path="${jaxb}"/>
		<pathelement path="${CXF}"/>
		<pathelement path="${apache-commons}"/>
		<pathelement path="${guice}"/>		
	</path>
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.contrib}" />
		</classpath>
	</taskdef>
	
	<path id="groovy.path">
		<pathelement path="${GROOVY}"/>
	</path>
	
	<!-- using groovc as groovy compiler in ant-->
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path" />
	
	<!-- Compile model, but not its test-files -->
	<target name="compile" description="Compiles model">
		<echo>Compiling model's class-files</echo>
		<mkdir dir="${model.classes.dest}"/>
		<for param="jars">
			<path refid="model.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		<groovyc srcdir="src" destdir='${model.classes.dest}' classpathref="model.path" >
			<javac debug="${javac.debug}"/>
		</groovyc>	
		<!-- Copy Meta files to build dir-->
		<copy todir="${model.classes.dest}" >
			<fileset dir="src/">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<!-- path needed to model's testfiles-->
	<path id="model.test.path">
		<path refid="model.path"  />
		<pathelement path="${gndms-shared-model}"/>
	</path>
	
	<!-- Compile model's test-files -->
	<target name="compile.test" description="Compiles model test-files">
		<echo>Compiling model's test-classes</echo>
		<mkdir dir="${model.test.classes.dest}"/>
		<for param="jars">
			<path refid="model.test.path"/>
			<sequential>
				<if>
					<not>
						<available file="@{jars}"/>			
					</not>
					<then>
						<fail message="Not able to compile as '@{jars}' was not found."/>
					</then>
				</if>
				
			</sequential>
		</for>
		<javac srcdir='test-src' destdir='${model.test.classes.dest}' classpathref="model.test.path" debug="${javac.debug}"/>
		<!-- Copy Meta files to build dir-->
		<copy todir="${model.test.classes.dest}" >
			<fileset dir="test-src/">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>	
	</target>

	<!-- Creates jar-file containing model's test-classes-->
	<target name="jar.test" depends="compile.test" description="Creates jar file gndms-shared-model-test.jar in 'extra/lib'">	
		<echo>Generating gndms-shared-model-test.jar</echo>
		<jar destfile="${gndms-shared-model-test}"
		     basedir="${model.test.classes.dest}">
		</jar>
	</target>
	
	<!-- Creates jar-file containing model's classes -->
	<target name="prejar" depends="compile" description="Creates jar file gndms-shared-model.jar in 'extra/lib'">	
		<echo>Generating gndms-shared-model.jar</echo>
		<jar destfile="${gndms-shared-model}"
		     basedir="${model.classes.dest}">
		</jar>
	</target>
	<!-- Deletes classfiles-->
	<target name="clean" description="Deletes model's classfiles">
		<echo>Deleting model's class-files</echo>
		<delete dir='${model.classes}'/>
	</target>
	
	<!-- Deletes  jar-files -->
	<target name="clean.jar" description="Deletes model's jar-files">
		<echo>Deleting all generated jars belonging to model</echo>
		<delete file='${gndms-shared-model}'/>
		<delete file='${gndms-shared-model-test}'/>
	</target>
	
	<target name="jar" depends="prejar">
		<ant antfile="build-openjpa.xml" target="enhance" dir="${model.dir}" />	
	</target>
	
	
	<target name="help" description="Prints usage information.">
		<echo message=" =================================================================================" />
		<echo message="|                      MODEL Compilation                                          |" />
		<echo message="|                                                                                 |" />
		<echo message=" ---------------------------------------------------------------------------------" />
		<echo message="|  USAGE:                                                                         |" />
		<echo message="|    Type 'ant -h' for general help with Ant	                                     |" />
		<echo message="|    Type 'ant -p' for a description of available build targets.                  |" />
		<echo message="|    Type 'ant clean' for deleting all generated class-files.                     |" />
		<echo message="|    Type 'ant clean.all' for deleting all generated class-files and jars         |" />
		<echo message="|    Type 'ant compile' to compile all class-files of model                       |" />
		<echo message="|    Type 'ant compile.test' to compile all test-class-files and create the jars	 |" />
		<echo message="|    Type 'ant jar' to  create the jars	                                         |" />
		<echo message=" =================================================================================" />
	</target>
</project>
