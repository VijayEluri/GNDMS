<project name="c3grid" default="help" basedir="." >
	
	
	<!-- Define the environment variable -->
	<property environment="env"/>

	<property name="javac.debug" value="true"/>
	
	<!-- Jars -->
	<property name="tools-lib.dir" value="extra/tools-lib" />
	<property name="build-lib.dir" value="extra/build-lib" />
	<property name="lib.dir" value="extra/lib" />
	
	<property name="c3grid.basedir" value="${basedir}"/>
	<property file="c3grid.properties"/>
	<property file="c3grid.deps"/>
	
	
	
	<!-- Source-Code directories of each package-->
	<property name="model.dir" value="model"/>
	<property name="kit.dir" value="kit"/>
	<property name="logic.dir" value="logic"/>
	<property name="infra.dir" value="infra"/>
	<property name="typecon.dir" value="typecon"/>
    	<property name="stuff.dir" value="stuff"/>
	<!--property name="dspace.dir" value="services/DSpace" /-->
  	<property name="stuff.dir" value="stuff"/>
	<property name="dspace.dir" value="services/DSpace" />
	<property name="gorfx.dir" value="services/GORFX" />


	<!-- Directories of Build-files  -->
	<property name="model.dest" value="${model.dir}/gndms-shared-model"/>
	<property name="kit.dest" value="${kit.dir}/gndms-kit"/>
	<property name="logic.dest" value="${logic.dir}/gndms-logic"/>
	<property name="infra.dest" value="${infra.dir}/gndms-infra"/>
	<property name="typecon.dest" value="${typecon.dir}/gndms-typecon"/>
	<property name="stuff.dest" value="${stuff.dir}/gndms-stuff"/>

	
	
	<!-- using ant contrib for contidionals, looping , and runtarget -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${build-lib.dir}/ant-contrib-0.6.jar" />
		</classpath>
	</taskdef>
		
	<!-- Import deployment file of each package-->
	<!--import file="${model.dir}/build.xml"/>	
	<import file="${kit.dir}/build.xml"/>
	<import file="${logic.dir}/build.xml"/>
	<import file="${infra.dir}/build.xml"/>
	<import file="${typecon.dir}/build.xml"/>
	<import file="${stuff.dir}/build.xml"/-->

	<path id="groovy.path">
		<pathelement location="${gndms-groovy}"/>
	</path>
	
	<!-- using groovc as groovy compiler in ant-->
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.path" />
	
	
	<!-- Sets all necessary settings and builds the whole project -->
	<target name="compile" description="Sets all necessary settings and builds the whole project">
		<runtarget target="stubs.compile"/>
		<runtarget target="symlink"/>
		<runtarget target="compile.src"/>
		<runtarget target="services.compile"/>
	</target>
	
	<target name="clean.stubsServices">
		<exec executable="sh">
			<arg value="-c"/>
			<arg value="for i in services/* ; do ( cd $i &amp;&amp; ant preClean ) ; done"/>
		</exec>
		<delete includeemptydirs="true">
			<fileset dir="services" includes="**/build/"/>	
		</delete>
		<exec executable="sh">
			<arg value="-c"/>
			<arg value="for i in services/* ; do ( cd $i &amp;&amp; ant postClean ) ; done"/>
		</exec>
	</target>
	

	<target name="enhance">
		<ant target="enhance" dir="${model.dir}" antfile="build-openjpa.xml" />
 	</target>

	<!-- Creates jar's for every service (class files will be created if not already done)-->
	<target name="compile.src" description="Creates jar files for every service, will be compiled if necessary">
		<ant antfile="${stuff.dir}/build.xml" inheritALL="false"/>
		<ant antfile="${model.dir}/build.xml" inheritALL="false"/>
		<ant antfile="${kit.dir}/build.xml" inheritALL="false"/>
		<ant antfile="${logic.dir}/build.xml" inheritALL="false"/>
		<ant antfile="${typecon.dir}/build.xml" inheritALL="false"/>
		<!--runtarget target="infra.jar"/-->
	</target>
	
	<target name="ziptest">
		<zip destfile="proptest.zip" basedir="." includes="${stuff}"/>
	</target>
	<!-- Delete build-files every service -->
	<target name="clean" description="deletes build-files of every service">
		<runtarget target="clean.stubsServices"/>
		<delete file=".symlink"/>
		<echo> Deleting binaries </echo>
		<runtarget target="infra.clean"/>
		<runtarget target="typecon.clean"/>
		<runtarget target="logic.clean"/>
		<runtarget target="kit.clean"/>
		<ant target="model.clean"/>
		<runtarget target="stuff.clean"/>
		<echo level="warning"> Note: Only class-files have been deleted! To delete also the generated jars type 'ant clean.all' </echo>
	</target>
	
	
	<!-- Delete generated jars-->
	<target name="clean.jar" description="deletes all generated jars">
		<runtarget target="infra.clean.jar"/>
		<runtarget target="typecon.clean.jar"/>
		<runtarget target="logic.clean.jar"/>
		<runtarget target="kit.clean.jar"/>
		<ant target="model.clean.jar"/>
		<runtarget target="stuff.clean.jar"/>
	</target>
	<!-- Delete build-files and generated jar every package -->
	<target name="clean.all" description="deletes build-files and jars of every package">
		<property name="cleanALL" value="true"/>
		<runtarget target="clean.jar"/>
		<runtarget target="clean"/>
	</target>
	



	<!-- Creates jar-file of evey service's test-classes. Will be compiled if necessary -->
	<target name="compile.test" description="Creates jar-file of evey service's test-classes. Will be compiled if necessary">
		<runtarget target="stuff.test.jar"/>
		<ant target="model.test.jar"/>
		<runtarget target="kit.test.jar"/>
		<runtarget target="logic.test.jar"/>
		<runtarget target="typecon.test.jar"/>
		<runtarget target="infra.test.jar"/>
	</target>
	
	<!-- Building stubs for every service -->
	<target name='stubs.compile'>
		<exec executable="sh">
			<arg value="-c"/>
			<arg value="for i in services/* ; do ( cd $i &amp;&amp; ant compileStubs ) ; done"/>
		</exec>
	</target>
	
	<!-- class-files needed to compile DSpace -->
	<path id="dspace.path">
		<pathelement path="${GROOVY}"/> 
		<pathelement path="${annotations}"/>
		<dirset dir="${dspace.dir}/build/stubs-DSpace/classes/" />
		<pathelement path="${gndms-infra}"/>
		<pathelement location="${gndms-kit}"/>
		<pathelement location="${gndms-logic}"/>
		<pathelement location="${gndms-shared-model}"/>
		<pathelement location="${stuff}"/>
		<pathelement path="${joda-time}"/> 
		<dirset dir="${dspace.dir}/src/" />
		<pathelement path="${dspace.nonsym}"/>
		<fileset refid="globus.lib"/>
		<pathelement path="${openjpa}"/>
		<pathelement path="${guice}"/>
	</path>
	
	<!-- class-files needed to compile GORFX -->
	<path id="gorfx.path">
		<pathelement path="${GROOVY}"/> 
		<pathelement path="${annotations}"/>
		<dirset dir="${gorfx.dir}/build/stubs-GORFX/classes/" />
		<pathelement location="${gndms-typecon}"/>
		<pathelement location="${gndms-infra}"/>
		<pathelement location="${gndms-kit}"/>
		<pathelement location="${gndms-logic}"/>
		<pathelement location="${gndms-shared-model}"/>
		<pathelement location="${stuff}"/>
		<pathelement location="${joda-time}"/> 
		<dirset dir="${gorfx.dir}/src/" />
		<pathelement path="${gorfx.nonsym}"/>
		<fileset refid="globus.lib"/>
		<pathelement path="${openjpa}"/>
		<pathelement location="${lib.dir}/DSpace.jar"/>
		<pathelement path="${args4j}"/>
		<dirset dir="${dspace.dir}/build/stubs-DSpace/classes/" />
		<pathelement path="${jaxb}"/>
		<pathelement path="${guice}"/>
	</path>
	<!-- Building all services -->
	<target name='services.compile'>
		<mkdir dir="tmp"/>
		<javac srcdir='${dspace.dir}/src' destdir='tmp' classpathref="dspace.path" debug="${javac.debug}" />
		<jar destfile="${lib.dir}/DSpace.jar"
		     basedir="tmp">
		</jar>
		<delete dir="tmp"/>
		<mkdir dir="tmp"/>
		<javac srcdir='${gorfx.dir}/src' destdir='tmp' classpathref="gorfx.path" debug="${javac.debug}"/>
		<jar destfile="${gorfx.dir}/GORFX.jar"
		     basedir="tmp">
		</jar>
		<delete dir="tmp"/>
		<exec executable="sh">
			<arg value="-c"/>
			<arg value="for i in services/* ; do ( cd $i &amp;&amp; ant createDeploymentGar ) ; done"/>
		</exec>
	</target>
	
	
	<!-- Checks if symlink has been executed before -->
	<target name="symlink.check">
		<available property="linked" file=".symlink"/>
	</target>
	
	<!-- Create necessary symlinks in the services' lib directories -->
	<target name="symlink" depends="symlink.check" unless="linked" description="sets symbolic links, if needed">
		<echo> setting symbolic links </echo>
		<exec executable="sh">
			<arg value="sync.sh"/>
		</exec>
		<echo file=".symlink">dummy-file, needed for build-script </echo>
	</target>
	

	<target name="help" description="Prints usage information.">
		<echo message=" =================================================================================" />
		<echo message="|                      C3Grid GNDMS Compilation                                   |" />
		<echo message="|                                                                                 |" />
		<echo message=" ---------------------------------------------------------------------------------" />
		<echo message="|  USAGE:                                                                         |" />
		<echo message="|    Type 'ant -h' for general help with Ant	                                     |" />
		<echo message="|    Type 'ant -p' for a description of available build targets.                  |" />
		<echo message="|    Type 'ant clean' for deleting all generated class-files.                     |" />
		<echo message="|    Type 'ant clean.all' for deleting all generated class-files and jars         |" />
		<echo message="|    Type 'ant compile' to compile all class-files of c3grid and create the jars	 |" />
		<echo message="|    Type 'ant compile.test' to compile all test-class-files and create the jars	 |" />
		<echo message=" =================================================================================" />
	</target>
	
	
</project>
