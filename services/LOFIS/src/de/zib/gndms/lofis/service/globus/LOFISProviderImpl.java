package de.zib.gndms.lofis.service.globus;

import de.zib.gndms.lofis.service.LOFISImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the LOFISImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class LOFISProviderImpl{
	
	LOFISImpl impl;
	
	public LOFISProviderImpl() throws RemoteException {
		impl = new LOFISImpl();
	}
	

    public de.zib.gndms.lofis.stubs.CreateLofiSetResponse createLofiSet(de.zib.gndms.lofis.stubs.CreateLofiSetRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.MissingSourceFiles, de.zib.gndms.lofis.stubs.types.UnsupportedOrInvalidSlice {
    de.zib.gndms.lofis.stubs.CreateLofiSetResponse boxedResult = new de.zib.gndms.lofis.stubs.CreateLofiSetResponse();
    boxedResult.setLofiSetReference(impl.createLofiSet(params.getExistingReplicaSlices().getReplicaSlices(),params.getStorageSlices().getSliceReference(),params.getContext().getContext()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.stubs.MergeLofiSetsResponse mergeLofiSets(de.zib.gndms.lofis.stubs.MergeLofiSetsRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.ConflictingLofiSetsInMerge {
    de.zib.gndms.lofis.stubs.MergeLofiSetsResponse boxedResult = new de.zib.gndms.lofis.stubs.MergeLofiSetsResponse();
    boxedResult.setLofiSetReference(impl.mergeLofiSets(params.getLofiSetRefs().getLofiSetReference(),params.getContext().getContext()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.stubs.CallMaintenanceActionResponse callMaintenanceAction(de.zib.gndms.lofis.stubs.CallMaintenanceActionRequest params) throws RemoteException {
    de.zib.gndms.lofis.stubs.CallMaintenanceActionResponse boxedResult = new de.zib.gndms.lofis.stubs.CallMaintenanceActionResponse();
    boxedResult.setResponse(impl.callMaintenanceAction(params.getAction(),params.getOptions().getContext()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.stubs.CreateOrRetrieveLofiSetResponse createOrRetrieveLofiSet(de.zib.gndms.lofis.stubs.CreateOrRetrieveLofiSetRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.UnknownOrInvalidCacheKey, de.zib.gndms.lofis.stubs.types.MissingSourceFiles, de.zib.gndms.lofis.stubs.types.UnsupportedOrInvalidSlice {
    de.zib.gndms.lofis.stubs.CreateOrRetrieveLofiSetResponse boxedResult = new de.zib.gndms.lofis.stubs.CreateOrRetrieveLofiSetResponse();
    boxedResult.setLofiSetReference(impl.createOrRetrieveLofiSet(params.getCacheKey(),params.getExistingReplicaSlices().getReplicaSlices(),params.getStorageSlices().getSliceReference(),params.getContext().getContext()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.stubs.RetrieveLofiSetResponse retrieveLofiSet(de.zib.gndms.lofis.stubs.RetrieveLofiSetRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.UnknownOrInvalidCacheKey {
    de.zib.gndms.lofis.stubs.RetrieveLofiSetResponse boxedResult = new de.zib.gndms.lofis.stubs.RetrieveLofiSetResponse();
    boxedResult.setLofiSetReference(impl.retrieveLofiSet(params.getCacheKey(),params.getContext().getContext()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.stubs.MergeLofiSetsAndCacheNewResponse mergeLofiSetsAndCacheNew(de.zib.gndms.lofis.stubs.MergeLofiSetsAndCacheNewRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.UnknownOrInvalidCacheKey, de.zib.gndms.lofis.stubs.types.ConflictingLofiSetsInMerge {
    de.zib.gndms.lofis.stubs.MergeLofiSetsAndCacheNewResponse boxedResult = new de.zib.gndms.lofis.stubs.MergeLofiSetsAndCacheNewResponse();
    boxedResult.setLofiSetReference(impl.mergeLofiSetsAndCacheNew(params.getCacheKey(),params.getLofiSetRefs().getLofiSetReference(),params.getContext().getContext()));
    return boxedResult;
  }

}
