package de.zib.gndms.lofis.lofiset.service.globus;

import de.zib.gndms.lofis.lofiset.service.LofiSetImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the LOFISImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class LofiSetProviderImpl{
	
	LofiSetImpl impl;
	
	public LofiSetProviderImpl() throws RemoteException {
		impl = new LofiSetImpl();
	}
	

    public de.zib.gndms.lofis.lofiset.stubs.GrantStorageSlicesResponse grantStorageSlices(de.zib.gndms.lofis.lofiset.stubs.GrantStorageSlicesRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.UnsupportedOrInvalidSlice {
    de.zib.gndms.lofis.lofiset.stubs.GrantStorageSlicesResponse boxedResult = new de.zib.gndms.lofis.lofiset.stubs.GrantStorageSlicesResponse();
    impl.grantStorageSlices(params.getSlices().getSliceReference());
    return boxedResult;
  }

    public de.zib.gndms.lofis.lofiset.stubs.GetSubLofiSetResponse getSubLofiSet(de.zib.gndms.lofis.lofiset.stubs.GetSubLofiSetRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.MissingSourceFiles {
    de.zib.gndms.lofis.lofiset.stubs.GetSubLofiSetResponse boxedResult = new de.zib.gndms.lofis.lofiset.stubs.GetSubLofiSetResponse();
    boxedResult.setLofiSetReference(impl.getSubLofiSet(params.getLofiMap().getLofiMap()));
    return boxedResult;
  }

    public de.zib.gndms.lofis.lofiset.stubs.RegisterReplicaSlicesResponse registerReplicaSlices(de.zib.gndms.lofis.lofiset.stubs.RegisterReplicaSlicesRequest params) throws RemoteException, de.zib.gndms.lofis.stubs.types.MissingSourceFiles, de.zib.gndms.lofis.stubs.types.UnsupportedOrInvalidSlice {
    de.zib.gndms.lofis.lofiset.stubs.RegisterReplicaSlicesResponse boxedResult = new de.zib.gndms.lofis.lofiset.stubs.RegisterReplicaSlicesResponse();
    impl.registerReplicaSlices(params.getExistingReplicaSlices().getReplicaSlices());
    return boxedResult;
  }

    public de.zib.gndms.lofis.lofiset.stubs.GetReplicaSlicesResponse getReplicaSlices(de.zib.gndms.lofis.lofiset.stubs.GetReplicaSlicesRequest params) throws RemoteException {
    de.zib.gndms.lofis.lofiset.stubs.GetReplicaSlicesResponse boxedResult = new de.zib.gndms.lofis.lofiset.stubs.GetReplicaSlicesResponse();
    boxedResult.setReplicaSlices(impl.getReplicaSlices(params.getReplicaSliceFilter().getReplicaSliceFilter()));
    return boxedResult;
  }

}
