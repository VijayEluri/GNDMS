package de.zib.gndms.lofis.lofiset.service;

import java.rmi.RemoteException;

/** 
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class LofiSetImpl extends LofiSetImplBase {

	
	public LofiSetImpl() throws RemoteException {
		super();
	}
	
  public types.ReplicaSliceT[] getAvailableReplicaSlices(boolean completeSlicesOnly) throws RemoteException {
    //TODO: Implement this autogenerated method
    throw new RemoteException("Not yet implemented");
  }

  public de.zib.gndms.lofis.lofiset.stubs.types.LofiSetReference getSubLofiSet(types.ConflictResolvingFileMappingSeqT lofiMap) throws RemoteException {

		try {
            de.zib.gndms.lofis.lofiset.service.globus.resource.LofiSetResourceHome home = getResourceHome(); 
            org.globus.wsrf.ResourceKey key = home.createResource(); 
            
            //  Grab the newly created resource
			de.zib.gndms.lofis.lofiset.service.globus.resource.LofiSetResource thisResource = (de.zib.gndms.lofis.lofiset.service.globus.resource.LofiSetResource)home.find(key);
			
			//  This is where the creator of this resource type can set whatever needs
			//  to be set on the resource so that it can function appropriatly  for instance
			//  if you want the resouce to only have the query string then there is where you would
			//  give it the query string.
			
			
			// sample of setting creator only security.  This will only allow the caller that created
			// this resource to be able to use it.
			//thisResource.setSecurityDescriptor(gov.nih.nci.cagrid.introduce.servicetools.security.SecurityUtils.createCreatorOnlyResourceSecurityDescriptor());

            de.zib.gndms.lofis.lofiset.stubs.types.LofiSetReference reference = home.getResourceReference(key);
            return reference; 
        } catch (Exception e) {
			throw new RemoteException("Error creating new resource LofiSet:" + e.getMessage(), e);
		}
  }

}

