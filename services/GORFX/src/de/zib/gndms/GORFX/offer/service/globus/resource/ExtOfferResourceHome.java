package de.zib.gndms.GORFX.offer.service.globus.resource;

/*
 * Copyright 2008-2011 Zuse Institute Berlin (ZIB)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



import de.zib.gndms.GORFX.offer.stubs.types.OfferReference;
import de.zib.gndms.GORFX.service.globus.resource.ExtGORFXResourceHome;
import de.zib.gndms.infra.GNDMSTools;
import de.zib.gndms.infra.service.GNDMServiceHome;
import de.zib.gndms.infra.system.GNDMSystem;
import de.zib.gndms.model.common.ModelUUIDGen;
import de.zib.gndms.neomodel.common.NeoDao;
import org.apache.axis.message.addressing.AttributedURI;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.globus.wsrf.Resource;
import org.globus.wsrf.ResourceException;
import org.globus.wsrf.ResourceKey;
import org.globus.wsrf.impl.SimpleResourceKey;
import org.globus.wsrf.utils.AddressingUtils;
import org.jetbrains.annotations.NotNull;

import javax.naming.NamingException;
import javax.persistence.EntityManagerFactory;


/**
 * This class overrides the ResourceHome that is automatically generated by introduce for Globus
 * Toolkit. In GNDMS this is mainly necessary to provide RDBMS/JPA-based resource persistence.
 * In order to use the extended resource home they have to be configured in jndi-config.xml.
 * If this has been done properly, you should see an info-level log message during the start up
 * of the web service container that notifies succesfull initialization of the extended resource
 * home.
 *
 * @author  try ste fan pla nti kow zib
 * @version $Id$
 *
 *          User: stepn Date: 16.07.2008 Time: 12:35:27
 */
public final class ExtOfferResourceHome extends OfferResourceHome implements GNDMServiceHome {

    private boolean initialized;

    @NotNull
    private GNDMSystem system;

    @NotNull
    private AttributedURI serviceAddress;


    // logger can be an instance field since resource home classes are instantiated at most once
	@NotNull
	@SuppressWarnings({"FieldNameHidesFieldInSuperclass"})
	private final Log logger = LogFactory.getLog(ExtOfferResourceHome.class);


    @Override
	public synchronized void initialize() throws Exception {

        if (!initialized) {
            try {
                super.initialize();    // Overridden method
                logger.info("Extended offer-resource-home initializing");
                system = ExtGORFXResourceHome.getGridConfig().retrieveSystemReference();
                serviceAddress = GNDMSTools.getServiceAddressFromContext();
                initialized = true;
            }
            catch ( NamingException e) {
                logger.error("Initialization failed");
                throw new RuntimeException(e);
            }
        }
    }


    @NotNull
    public synchronized GNDMSystem getSystem() throws IllegalStateException {
        ensureInitialized();
        return system;
    }


    public void setSystem(@NotNull GNDMSystem newSystem) throws UnsupportedOperationException {
        throw new UnsupportedOperationException("Cant overwrite system");
    }

    
    private void ensureInitialized() {
        try
        { initialize();	}
        catch (Exception e) {
            logger.error("Unexpected initialization error", e);
            throw new RuntimeException(e);
        }
    }


    @Override
    protected Resource createNewInstance() throws ResourceException {

        OfferResource res = ( OfferResource ) super.createNewInstance();
        res.setHome( this );
        return res;
    }

    
    @NotNull
    public String getNickName() {
        return "offer";
    }

    public ResourceKey getKeyForId(@NotNull final String id) {
        return new SimpleResourceKey( getKeyTypeName(), id );
    }


    @NotNull
    public EntityManagerFactory getEntityManagerFactory() {
        return getSystem().getEntityManagerFactory();
    }


    @NotNull
    public synchronized AttributedURI getServiceAddress() {
        ensureInitialized();
        return serviceAddress;
    }


    public ModelUUIDGen getModelUUIDGen() {
        return getSystem().getModelUUIDGen();
    }


    @Override
    public OfferReference getResourceReference(final @NotNull ResourceKey key) throws Exception {
		EndpointReferenceType epr = AddressingUtils.createEndpointReference(serviceAddress.toString(), key);
		OfferReference ref = new OfferReference();
		ref.setEndpointReference(epr);
		return ref;
    }    

    @NotNull public NeoDao getDao() {
        return system.getDao();
    }
}
