<?xml version='1.0' encoding='UTF-8'?>
<schema targetNamespace="http://gndms.zib.de/common/types"
        xmlns:impl="http://gndms.zib.de/common/types"
	    xmlns:slice="http://dspace.gndms.zib.de/DSpace/Slice/types"
	    xmlns:wsbf="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd"
        elementFormDefault="qualified" version="1.0" xmlns="http://www.w3.org/2001/XMLSchema"
        xml:lang="EN">
	
<import namespace="http://dspace.gndms.zib.de/DSpace/Slice/types"
        schemaLocation="../DSpace/SliceTypes.xsd" />

<import namespace="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd"
		schemaLocation="../wsrf/faults/WS-BaseFaults.xsd" />

<simpleType name="UUIDT">
	<restriction base="string">
	    <pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"/>
	</restriction>
</simpleType>

<complexType name="StorageSizeT">
	<sequence>
		<element name="StorageSizeValue" type="positiveInteger" />
		<element name="StorageSizeUnit" type="string" />
	</sequence>
</complexType>

<element name="TotalStorageSize" type="impl:StorageSizeT" />
<element name="AvailableStorageSize" type="impl:StorageSizeT" />


<element name="SubspaceSpecifier" type="QName" />
<element name="SliceKind" type="QName" />
<element name="SliceLocation" type="anyURI" />

<simpleType name="FilenameT">
	<!--
		This excludes ., .., and all pathnames containing one of <,>,',",:,;,&,/,\,|,#,$,`

		 This is defensive programming to prevent the worst when somebody forgets to
		 properly escape filenames in staging scripts
	-->
	<restriction base="normalizedString">
		<pattern value="([^.'&lt;&gt;$#&quot;:;&amp;/\\\|`][^'&lt;&gt;$#&quot;:;&amp;/\\\|`]*|
\.[^.'&lt;&gt;$#&quot;:;&amp;/\\\|`][^'&lt;&gt;$#&quot;:;&amp;/\\\|`]*|
[^.'&lt;&gt;$#&quot;:;&amp;/\\\|`]+)" />
	</restriction>
</simpleType>

<element name="File" type="impl:FilenameT" />

<complexType name="FileT">
	<sequence>
		<element ref="impl:File" minOccurs="1" maxOccurs="1"/>
	</sequence>
</complexType>

<complexType name="FileSeqT">
	<sequence>
		<element ref="impl:File" minOccurs="0" maxOccurs="unbounded"/>
	</sequence>
</complexType>

<simpleType name="FileMapConflictResolutionStrategyT">
	<restriction base="normalizedString">
		<enumeration value="destinationWins" />
		<enumeration value="sourceWins" />
		<enumeration value="error" />
	</restriction>
</simpleType>

<attribute name="conflictResolutionStrategy"
           type="impl:FileMapConflictResolutionStrategyT" default="error"/>

<complexType name="FileMapEntryT">
	<sequence>
		<element name="Destination" minOccurs="1" maxOccurs="1">
			<complexType>
				<choice>
					<element ref="impl:File" />
					<element name="Skip">
						<complexType />
					</element>
				</choice>
			</complexType>
		</element>
		<element name="Source" type="impl:FileT" minOccurs="1" maxOccurs="1"/>
	</sequence>
</complexType>

<complexType name="FileMappingSeqT">
	<sequence>
		<element name="MapFile" minOccurs="0" maxOccurs="unbounded">
			<complexType>
				<complexContent>
					<extension base="impl:FileMapEntryT">
						<attribute name="required" type="boolean" default="true" />
					</extension>
			</complexContent>
			</complexType>
		</element>
	</sequence>
</complexType>

<complexType name="ReplicaSlicesT">
	<sequence>
		<element name="LofiMap" minOccurs="1" maxOccurs="1">
			<complexType>
			<complexContent>
				<extension base="impl:FileMappingSeqT">
					<attribute name="fillMapFromSlices" type="boolean" default="false" />
					<attribute ref="impl:conflictResolutionStrategy" />
					<attribute name="completeSlices" type="boolean" default="false" />
				</extension>
			</complexContent>
			</complexType>
		</element>
		<element ref="slice:SliceReference" minOccurs="1" maxOccurs="unbounded"/>
	</sequence>
</complexType>

<element name="Lofi" type="impl:FileT" />
<element name="LofiSeq" type="impl:FileSeqT" />
<element name="LofiMap" type="impl:FileMappingSeqT" />

<element name="ReplicaSlices" type="impl:ReplicaSlicesT" />

<complexType name="ReplicaSliceFilterT">
	<sequence>
		<element name="CompleteSlicesOnly" type="boolean" minOccurs="1" maxOccurs="1" />
		<element name="ResultLimit" minOccurs="0" maxOccurs="1" type="positiveInteger" />
	</sequence>
</complexType>

<element name="ReplicaSliceFilter" type="impl:ReplicaSliceFilterT" />

<complexType name="OfferExecutionContractT">
	<sequence>
		<element name="IfDecisionAfter" type="dateTime" minOccurs="0" maxOccurs="1"/>
		<element name="IfDecisionBefore" type="dateTime" minOccurs="0" maxOccurs="1"/>
		<element name="ExecutionLikelyUntil" type="dateTime" minOccurs="0" maxOccurs="1"/>
		<element name="ResultValidUntil" type="dateTime" minOccurs="0" maxOccurs="1"/>
	</sequence>
</complexType>

<element name="OfferExecutionContract" type="impl:OfferExecutionContractT" />

<simpleType name="TaskStatusT">
	<restriction base="normalizedString">
		<enumeration value="unknown" />
		<enumeration value="created" />
		<enumeration value="initialized" />
		<enumeration value="inprogress" />
		<enumeration value="failed" />
		<enumeration value="finished" />
	</restriction>
</simpleType>

<element name="TaskExecutionState">
	<complexType>
		<sequence>
			<element name="Status" type="impl:TaskStatusT" minOccurs="1" maxOccurs="1" default="unknown" />
			<element name="Progress" type="positiveInteger" minOccurs="1" maxOccurs="1" default="1" />
			<element name="MaxProgress" type="positiveInteger" minOccurs="1" maxOccurs="1" default="100"/>
			<element name="Description" type="normalizedString" minOccurs="1" maxOccurs="1" default=""/>
			<element name="ContractBroken" type="boolean" minOccurs="1" maxOccurs="1" default="false" />
		</sequence>
	</complexType>
</element>

<element name="TaskExecutionFailure">
	<complexType>
		<choice>
			<element ref="wsbf:BaseFault" />
			<element name="ImplementationFault">
				<complexType>
					<sequence>
						<element name="Message" type="string" minOccurs="1" maxOccurs="1" />
						<element name="FaultClass" type="string" minOccurs="1" maxOccurs="1" />
						<element name="FaultTrace" type="string" minOccurs="0" maxOccurs="1" />						
					</sequence>
				</complexType>
			</element>
			<element name="AllIsFine" />
		</choice>
	</complexType>
</element>
</schema>
