package de.zib.gndms.dspace.service.globus;

import de.zib.gndms.dspace.service.DSpaceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the DSpaceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class DSpaceProviderImpl{
	
	DSpaceImpl impl;
	
	public DSpaceProviderImpl() throws RemoteException {
		impl = new DSpaceImpl();
	}
	

    public de.zib.gndms.dspace.stubs.GetSubspaceByNameResponse getSubspaceByName(de.zib.gndms.dspace.stubs.GetSubspaceByNameRequest params) throws RemoteException, de.zib.gndms.dspace.stubs.types.UnknownSubspace {
    de.zib.gndms.dspace.stubs.GetSubspaceByNameResponse boxedResult = new de.zib.gndms.dspace.stubs.GetSubspaceByNameResponse();
    boxedResult.setSubspaceReference(impl.getSubspaceByName(params.getSubspaceName()));
    return boxedResult;
  }

    public de.zib.gndms.dspace.stubs.ListPublicSubspacesResponse listPublicSubspaces(de.zib.gndms.dspace.stubs.ListPublicSubspacesRequest params) throws RemoteException {
    de.zib.gndms.dspace.stubs.ListPublicSubspacesResponse boxedResult = new de.zib.gndms.dspace.stubs.ListPublicSubspacesResponse();
    boxedResult.setSubspaceReference(impl.listPublicSubspaces());
    return boxedResult;
  }

}
