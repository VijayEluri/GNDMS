package de.zib.gndms.dspace.slice.service.globus.resource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.axis.types.URI;
import org.jetbrains.annotations.NotNull;
import org.globus.wsrf.ResourceException;
import org.globus.wsrf.ResourceKey;
import de.zib.gndms.infra.service.GNDMServiceHome;
import de.zib.gndms.infra.system.GNDMSystem;
import de.zib.gndms.model.common.GridResource;

import javax.xml.namespace.QName;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Query;
import javax.persistence.EntityManager;


/**
 * This class overrides the ResourceHome that is automatically generated by introduce for Globus
 * Toolkit. In GNDMS this is mainly necessary to provide RDBMS/JPA-based resource persistence.
 * In order to use the extended resource home they have to be configured in jndi-config.xml.
 * If this has been done properly, you should see an info-level log message during the start up
 * of the web service container that notifies succesfull initialization of the extended resource
 * home.
 *
 * @author Stefan Plantikow <plantikow@zib.de>
 * @version $Id$
 *
 *          User: stepn Date: 16.07.2008 Time: 12:35:27
 */
public final class ExtSliceResourceHome extends SliceResourceHome
    implements GNDMServiceHome {

	// logger can be an instance field since resource home classes are instantiated at most once
	@NotNull
	@SuppressWarnings({"FieldNameHidesFieldInSuperclass"})
	private final Log logger = LogFactory.getLog(ExtSliceResourceHome.class);

	@Override
	public synchronized void initialize() throws Exception {
		logger.info("Slice home extension initializing");
		super.initialize();    // Overridden method
	}

    public URI getServiceAddress() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    public QName getResourceKeyTypeName() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    @NotNull
    public EntityManagerFactory getEntityManagerFactory() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    @NotNull
    public GNDMSystem getSystem() throws IllegalStateException {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    public void setSystem( @NotNull GNDMSystem system ) throws IllegalStateException {
//To change body of implemented methods use File | Settings | File Templates.
    }

    public Query getListAllQuery(final @NotNull EntityManager em) {
        return em.createNamedQuery("listAllSliceIds");
    }


    public void refresh( @NotNull GridResource resource ) throws ResourceException {
        //To change body of implemented methods use File | Settings | File Templates.
    }

    @NotNull
    public String getNickName() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    @NotNull
    public Class getModelClass() {
        return null;  //To change body of implemented methods use File | Settings | File Templates.
    }

    @NotNull
    public ResourceKey getKeyForResourceModel( GridResource model ) {
        // todo implement
        throw new UnsupportedOperationException();
    }


    @NotNull
    public ResourceKey getKeyForId(final String id) {
        // todo implement
        throw new UnsupportedOperationException();
    }
}
